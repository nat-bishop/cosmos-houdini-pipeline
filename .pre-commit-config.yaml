# Simplified Pre-commit Configuration
# Philosophy: Focus on essentials, run fast, provide clear value

default_language_version:
  python: python3.10

repos:
  # Basic file hygiene - fast, non-controversial
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      # Removed end-of-file-fixer - it modifies files causing uncommitted changes
      - id: check-yaml
        args: ['--allow-multiple-documents']
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: mixed-line-ending
        # Just check, don't fix (prevents uncommitted changes)

  # Ruff - Fast Python linter and formatter (replaces black, isort, flake8, etc.)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      # Check only - don't auto-fix (prevents uncommitted changes)
      - id: ruff
        args: [--exit-non-zero-on-fix]  # Fail if fixes needed, don't apply them
      # Check formatting only - don't auto-format
      - id: ruff-format
        args: [--check]  # Check only, don't modify files

# That's it! Just the essentials:
# - Files stay clean and consistent
# - Python code is formatted and linted
# - Runs in <5 seconds
# - No false positives or pedantic checks

# Run these separately when needed (not on every commit):
# - mypy cosmos_workflow/          # Type checking
# - pytest tests/ -m unit           # Unit tests
# - bandit -r cosmos_workflow/      # Security scan
# - safety check                    # Dependency vulnerabilities
